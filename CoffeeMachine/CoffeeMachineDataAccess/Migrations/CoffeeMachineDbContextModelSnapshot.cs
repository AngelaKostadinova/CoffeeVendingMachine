// <auto-generated />
using System;
using CoffeeMachineDataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoffeeMachineDataAccess.Migrations
{
    [DbContext(typeof(CoffeeMachineDbContext))]
    partial class CoffeeMachineDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CoffeeMachineDomain.Models.Coffee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CoffeeTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeTypeId");

                    b.ToTable("Coffees");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoffeeTypeId = 1,
                            Description = "Latte Coffee"
                        },
                        new
                        {
                            Id = 2,
                            CoffeeTypeId = 2,
                            Description = "Macchiato Coffee"
                        },
                        new
                        {
                            Id = 3,
                            CoffeeTypeId = 3,
                            Description = "Espresso Coffee"
                        },
                        new
                        {
                            Id = 4,
                            CoffeeTypeId = 4,
                            Description = "Americano Coffee"
                        },
                        new
                        {
                            Id = 5,
                            CoffeeTypeId = 5,
                            Description = "Mocha Coffee"
                        });
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.CoffeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CoffeeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Latte",
                            Price = 24.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Macchiato",
                            Price = 50.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Espresso",
                            Price = 20.5
                        },
                        new
                        {
                            Id = 4,
                            Name = "Americano",
                            Price = 78.0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Mocha",
                            Price = 27.0
                        });
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Milk",
                            Price = 5.0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sugar",
                            Price = 3.0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Ice",
                            Price = 2.0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Cream",
                            Price = 6.0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Chocolate",
                            Price = 10.0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Coffee",
                            Price = 10.0
                        });
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.Intensity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IntensityNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Intensities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Intensity of ingredient with the value of 1",
                            IntensityNumber = 1
                        },
                        new
                        {
                            Id = 2,
                            Description = "Intensity of ingredient with the value of 2",
                            IntensityNumber = 2
                        },
                        new
                        {
                            Id = 3,
                            Description = "Intensity of ingredient with the value of 3",
                            IntensityNumber = 3
                        },
                        new
                        {
                            Id = 4,
                            Description = "Intensity of ingredient with the value of 4",
                            IntensityNumber = 4
                        },
                        new
                        {
                            Id = 5,
                            Description = "Intensity of ingredient with the value of 5",
                            IntensityNumber = 5
                        });
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.TypeIngredientIntensity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CoffeeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<int>("IntensityId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CoffeeTypeId");

                    b.HasIndex("IngredientId");

                    b.HasIndex("IntensityId");

                    b.ToTable("TypeIngredientIntensities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CoffeeTypeId = 1,
                            IngredientId = 1,
                            IntensityId = 1
                        },
                        new
                        {
                            Id = 2,
                            CoffeeTypeId = 2,
                            IngredientId = 2,
                            IntensityId = 3
                        },
                        new
                        {
                            Id = 3,
                            CoffeeTypeId = 3,
                            IngredientId = 1,
                            IntensityId = 2
                        },
                        new
                        {
                            Id = 4,
                            CoffeeTypeId = 4,
                            IngredientId = 4,
                            IntensityId = 2
                        },
                        new
                        {
                            Id = 5,
                            CoffeeTypeId = 5,
                            IngredientId = 2,
                            IntensityId = 3
                        },
                        new
                        {
                            Id = 6,
                            CoffeeTypeId = 5,
                            IngredientId = 5,
                            IntensityId = 2
                        },
                        new
                        {
                            Id = 7,
                            CoffeeTypeId = 2,
                            IngredientId = 5,
                            IntensityId = 4
                        },
                        new
                        {
                            Id = 8,
                            CoffeeTypeId = 1,
                            IngredientId = 2,
                            IntensityId = 5
                        },
                        new
                        {
                            Id = 9,
                            CoffeeTypeId = 2,
                            IngredientId = 1,
                            IntensityId = 1
                        },
                        new
                        {
                            Id = 10,
                            CoffeeTypeId = 3,
                            IngredientId = 2,
                            IntensityId = 3
                        });
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.Coffee", b =>
                {
                    b.HasOne("CoffeeMachineDomain.Models.CoffeeType", "CoffeeType")
                        .WithMany()
                        .HasForeignKey("CoffeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoffeeType");
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.TypeIngredientIntensity", b =>
                {
                    b.HasOne("CoffeeMachineDomain.Models.CoffeeType", "CoffeeType")
                        .WithMany("TypeIngredientIntensities")
                        .HasForeignKey("CoffeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeMachineDomain.Models.Ingredient", "Ingredient")
                        .WithMany("TypeIngredientIntensities")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoffeeMachineDomain.Models.Intensity", "Intensity")
                        .WithMany("TypeIngredientIntensities")
                        .HasForeignKey("IntensityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CoffeeType");

                    b.Navigation("Ingredient");

                    b.Navigation("Intensity");
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.CoffeeType", b =>
                {
                    b.Navigation("TypeIngredientIntensities");
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.Ingredient", b =>
                {
                    b.Navigation("TypeIngredientIntensities");
                });

            modelBuilder.Entity("CoffeeMachineDomain.Models.Intensity", b =>
                {
                    b.Navigation("TypeIngredientIntensities");
                });
#pragma warning restore 612, 618
        }
    }
}
